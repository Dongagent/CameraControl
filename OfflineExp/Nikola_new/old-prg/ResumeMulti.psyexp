<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="2022.2.5">
  <Settings>
    <Param val="use prefs" valType="str" updates="None" name="Audio latency priority"/>
    <Param val="use prefs" valType="str" updates="None" name="Audio lib"/>
    <Param val="" valType="str" updates="None" name="Completed URL"/>
    <Param val="auto" valType="str" updates="None" name="Data file delimiter"/>
    <Param val="u'data/%s_%s_%s' % (expInfo['participant'], expName, expInfo['date'])" valType="code" updates="None" name="Data filename"/>
    <Param val="True" valType="bool" updates="None" name="Enable Escape"/>
    <Param val="{'participant': 'f&quot;{randint(0, 999999):06.0f}&quot;', 'session': '001'}" valType="code" updates="None" name="Experiment info"/>
    <Param val="True" valType="bool" updates="None" name="Force stereo"/>
    <Param val="False" valType="bool" updates="None" name="Full-screen window"/>
    <Param val="" valType="str" updates="None" name="HTML path"/>
    <Param val="" valType="str" updates="None" name="Incomplete URL"/>
    <Param val="testMonitor" valType="str" updates="None" name="Monitor"/>
    <Param val="[]" valType="list" updates="None" name="Resources"/>
    <Param val="False" valType="bool" updates="None" name="Save csv file"/>
    <Param val="False" valType="bool" updates="None" name="Save excel file"/>
    <Param val="False" valType="bool" updates="None" name="Save hdf5 file"/>
    <Param val="True" valType="bool" updates="None" name="Save log file"/>
    <Param val="True" valType="bool" updates="None" name="Save psydat file"/>
    <Param val="True" valType="bool" updates="None" name="Save wide csv file"/>
    <Param val="1" valType="num" updates="None" name="Screen"/>
    <Param val="True" valType="bool" updates="None" name="Show info dlg"/>
    <Param val="False" valType="bool" updates="None" name="Show mouse"/>
    <Param val="height" valType="str" updates="None" name="Units"/>
    <Param val="" valType="str" updates="None" name="Use version"/>
    <Param val="[720, 480]" valType="list" updates="None" name="Window size (pixels)"/>
    <Param val="avg" valType="str" updates="None" name="blendMode"/>
    <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
    <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
    <Param val="100.1.1.1" valType="str" updates="None" name="elAddress"/>
    <Param val="FILTER_LEVEL_2" valType="str" updates="None" name="elDataFiltering"/>
    <Param val="FILTER_LEVEL_OFF" valType="str" updates="None" name="elLiveFiltering"/>
    <Param val="EYELINK 1000 DESKTOP" valType="str" updates="None" name="elModel"/>
    <Param val="ELLIPSE_FIT" valType="str" updates="None" name="elPupilAlgorithm"/>
    <Param val="PUPIL_AREA" valType="str" updates="None" name="elPupilMeasure"/>
    <Param val="1000" valType="num" updates="None" name="elSampleRate"/>
    <Param val="False" valType="bool" updates="None" name="elSimMode"/>
    <Param val="RIGHT_EYE" valType="str" updates="None" name="elTrackEyes"/>
    <Param val="PUPIL_CR_TRACKING" valType="str" updates="None" name="elTrackingMode"/>
    <Param val="Resume Gaze" valType="str" updates="None" name="expName"/>
    <Param val="on Sync" valType="str" updates="None" name="exportHTML"/>
    <Param val="None" valType="str" updates="None" name="eyetracker"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="gpAddress"/>
    <Param val="4242" valType="num" updates="None" name="gpPort"/>
    <Param val="ioHub" valType="str" updates="None" name="keyboardBackend"/>
    <Param val="exp" valType="code" updates="None" name="logging level"/>
    <Param val="('MIDDLE_BUTTON',)" valType="list" updates="None" name="mgBlink"/>
    <Param val="CONTINUOUS" valType="str" updates="None" name="mgMove"/>
    <Param val="0.5" valType="num" updates="None" name="mgSaccade"/>
    <Param val="0.6" valType="num" updates="None" name="plConfidenceThreshold"/>
    <Param val="True" valType="bool" updates="None" name="plPupilCaptureRecordingEnabled"/>
    <Param val="" valType="str" updates="None" name="plPupilCaptureRecordingLocation"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="plPupilRemoteAddress"/>
    <Param val="50020" valType="num" updates="None" name="plPupilRemotePort"/>
    <Param val="1000" valType="num" updates="None" name="plPupilRemoteTimeoutMs"/>
    <Param val="False" valType="bool" updates="None" name="plPupillometryOnly"/>
    <Param val="psychopy_iohub_surface" valType="str" updates="None" name="plSurfaceName"/>
    <Param val="" valType="str" updates="None" name="tbLicenseFile"/>
    <Param val="" valType="str" updates="None" name="tbModel"/>
    <Param val="60" valType="num" updates="None" name="tbSampleRate"/>
    <Param val="" valType="str" updates="None" name="tbSerialNo"/>
  </Settings>
  <Routines>
    <Routine name="trial">
      <TextComponent name="text">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.03" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0.25)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="実験を行います。&amp;#10;キーボードの1~9を使って、アンドロイドの&amp;#10;表情に対する評価値を以下の2つの項目別に入力してください。&amp;#10;・感情価（説明）&amp;#10;・ヒトらしさ（説明）&amp;#10;&amp;#10;" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <MouseComponent name="mouse">
        <Param val="" valType="list" updates="constant" name="clickable"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="any click" valType="str" updates="constant" name="forceEndRoutineOnPress"/>
        <Param val="mouse" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="constant" name="newClicksOnly"/>
        <Param val="on click" valType="str" updates="None" name="saveMouseState"/>
        <Param val="name," valType="list" updates="constant" name="saveParamsClickable"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="mouse onset" valType="str" updates="constant" name="timeRelativeTo"/>
      </MouseComponent>
      <TextComponent name="undelete">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.03" valType="num" updates="constant" name="letterHeight"/>
        <Param val="undelete" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp">
        <Param val="'a','right'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="False" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <CodeComponent name="code">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="displayText=''&amp;#10;text_=''" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="keys = key_resp.getKeys()&amp;#10;if keys:&amp;#10;    displayText = keys[-1].name&amp;#10;    if displayText == 'left' or displayText == 'lshift':&amp;#10;        text_ = 'L'&amp;#10;    elif displayText == 'right' or displayText == 'rshift':&amp;#10;        text_ = 'R'&amp;#10;    else:&amp;#10;        text_ = &quot;ミスです。左シフトか右シフトボタンを押してください。&quot;&amp;#10;    undelete.setText(text_)" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="text_10">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.02" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_10" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -0.25)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="3" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="マウスの左クリックを押して実験を始めます。" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="routine_1">
      <TextComponent name="text_countdown">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_countdown" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="300" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$str(300-int(t))" valType="str" updates="set every frame" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="text_7">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_7" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="300.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="マウスを左クリックして開始します。" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <MouseComponent name="mouse_3">
        <Param val="" valType="list" updates="constant" name="clickable"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="any click" valType="str" updates="constant" name="forceEndRoutineOnPress"/>
        <Param val="mouse_3" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="constant" name="newClicksOnly"/>
        <Param val="on click" valType="str" updates="None" name="saveMouseState"/>
        <Param val="name," valType="list" updates="constant" name="saveParamsClickable"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="mouse onset" valType="str" updates="constant" name="timeRelativeTo"/>
      </MouseComponent>
    </Routine>
    <Routine name="finish">
      <TextComponent name="text_8">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_8" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="10" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="終了します" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <MouseComponent name="mouse_2">
        <Param val="" valType="list" updates="constant" name="clickable"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="any click" valType="str" updates="constant" name="forceEndRoutineOnPress"/>
        <Param val="mouse_2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="constant" name="newClicksOnly"/>
        <Param val="on click" valType="str" updates="None" name="saveMouseState"/>
        <Param val="name," valType="list" updates="constant" name="saveParamsClickable"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="mouse onset" valType="str" updates="constant" name="timeRelativeTo"/>
      </MouseComponent>
    </Routine>
    <Routine name="ledbeepcheck">
      <TextComponent name="text_3">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="10" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="LEDとブザーの動作チェックを実施しています。" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="ledbeepcheck_2">
        <Param val="import serial&amp;#10;import time&amp;#10;&amp;#10;ser = serial.Serial(&quot;COM3&quot;, 9600)" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="ser.write(b&quot;1&quot;)&amp;#10;time.sleep(1)&amp;#10;&amp;#10;ser.write(b&quot;2&quot;)&amp;#10;time.sleep(1)&amp;#10;&amp;#10;ser.write(b&quot;3&quot;)&amp;#10;time.sleep(1)&amp;#10;&amp;#10;ser.write(b&quot;4&quot;)&amp;#10;time.sleep(1)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="ser.close()" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="ledbeepcheck_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="counter">
      <CodeComponent name="break_counter">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="trialCounter = 1&amp;#10;nRestTrial = 28 # 28回目で休憩をはさむ" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if trialCounter % nRestTrial == 0:&amp;#10;    isRest = 1&amp;#10;else:&amp;#10;    isRest = 0&amp;#10;&amp;#10;text_2.setText(trialCounter)&amp;#10;trialCounter = trialCounter + 1&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="break_counter" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="text_2">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="start_countdown">
      <TextComponent name="text_countdown_2">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_countdown_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="5" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$str(5-int(t))" valType="str" updates="set every frame" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="code_2">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="# stop idle behavior&amp;#10;json_string = json.dumps(compoff_true)&amp;#10;message = roslibpy.Message({'data': json_string})&amp;#10;dib_topic.publish(message)&amp;#10;time.sleep(1)&amp;#10;&amp;#10;# stop idle behavior&amp;#10;json_string = json.dumps(compoff_true)&amp;#10;message = roslibpy.Message({'data': json_string})&amp;#10;dib_topic.publish(message)&amp;#10;time.sleep(1)&amp;#10;&amp;#10;# stop idle behavior&amp;#10;json_string = json.dumps(compoff_true)&amp;#10;message = roslibpy.Message({'data': json_string})&amp;#10;dib_topic.publish(message)&amp;#10;time.sleep(1)&amp;#10;&amp;#10;# stop idle behavior&amp;#10;json_string = json.dumps(compoff_true)&amp;#10;message = roslibpy.Message({'data': json_string})&amp;#10;dib_topic.publish(message)&amp;#10;time.sleep(1)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="test">
      <CodeComponent name="stop_idle">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="# stop idle behavior&amp;#10;json_string = json.dumps(compoff_true)&amp;#10;message = roslibpy.Message({'data': json_string})&amp;#10;dib_topic.publish(message)&amp;#10;time.sleep(1)&amp;#10;&amp;#10;# eyemove 2 initpose&amp;#10;client2.send(facs_cmd0.encode(&quot;utf-8&quot;))&amp;#10;time.sleep(1)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="# Define JSON data&amp;#10;json_data = {&amp;#10;    &quot;completely_off&quot;: False&amp;#10;}&amp;#10;json_string = json.dumps(json_data)&amp;#10;&amp;#10;# Define topic and message types&amp;#10;topic = roslibpy.Topic(client, '/do_idle_behavior', 'std_msgs/String')&amp;#10;&amp;#10;# Send messages&amp;#10;message = roslibpy.Message({'data': json_string})&amp;#10;# time.sleep(1)&amp;#10;topic.publish(message)&amp;#10;# time.sleep(1)&amp;#10;&amp;#10;# Terminate connection&amp;#10;client.terminate()&amp;#10;&amp;#10;# socket client close&amp;#10;client1.close()&amp;#10;client2.close()" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="stop_idle" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="Init_pose">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="client1.send(head_cmd0_1.encode(&quot;utf-8&quot;))&amp;#10;# client1.send(eye_cmd0_2.encode(&quot;utf-8&quot;))&amp;#10;# client2.send(facs_cmd0.encode(&quot;utf-8&quot;))&amp;#10;time.sleep(3)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Init_pose" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="start_pose">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="client2.send(facs_cmd1.encode(&quot;utf-8&quot;))&amp;#10;time.sleep(1)&amp;#10;&amp;#10;client1.send(head_cmd1_1.encode(&quot;utf-8&quot;))&amp;#10;time.sleep(2)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="start_pose" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="ikimasu">
        <Param val="json_data_ikimasu = {&amp;#10;    &quot;Command&quot;: &quot;ttsPlaywithParam&quot;,&amp;#10;    &quot;TtsID&quot;: 1023,&amp;#10;    &quot;Text&quot;: &quot;いきます。&quot;,&amp;#10;    &quot;Volume&quot;: 0.8,&amp;#10;    &quot;Rate&quot;: 1.0,&amp;#10;    &quot;Pitch&quot;: 1.0,&amp;#10;    &quot;Emphasis&quot;: 1.0,&amp;#10;    &quot;Emotion&quot;:&amp;#10;    {&amp;#10;        &quot;Joy&quot;: 0.0,&amp;#10;        &quot;Angry&quot;: 0.0,&amp;#10;        &quot;Sad&quot;: 0.0&amp;#10;    }&amp;#10;}" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="json_string = json.dumps(json_data_ikimasu)&amp;#10;message = roslibpy.Message({'data': json_string})&amp;#10;tts_topic.publish(message)&amp;#10;time.sleep(3)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="ikimasu" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="stim">
        <Param val="stim_txt = [&quot;僕は普通&quot;, &quot;僕は悲しい&quot;, &quot;僕はつらい&quot;, &quot;僕はうれしい&quot;, &quot;僕は楽しい&quot;]&amp;#10;stim_proso = [&quot;\&quot;Joy\&quot;:0,\&quot;Angry\&quot;:0,\&quot;Sad\&quot;:0&quot;, \&amp;#10;              &quot;\&quot;Joy\&quot;:0,\&quot;Angry\&quot;:0,\&quot;Sad\&quot;:1&quot;, \&amp;#10;              &quot;\&quot;Joy\&quot;:0,\&quot;Angry\&quot;:0,\&quot;Sad\&quot;:1&quot;, \&amp;#10;              &quot;\&quot;Joy\&quot;:1,\&quot;Angry\&quot;:0,\&quot;Sad\&quot;:0&quot;, \&amp;#10;              &quot;\&quot;Joy\&quot;:1,\&quot;Angry\&quot;:0,\&quot;Sad\&quot;:0&quot;]&amp;#10;stim_exp = [&quot;facs InnerBrow 0 Outerbrow 0 UpperLid 0 LowerLid 0 Cheek 0 NoseWrinkler 0 UpperLip 0 LipCorner 0 MouthCornerStickout 0 MouthOpen 0 JawDrop 0\n&quot;, \&amp;#10;            &quot;facs InnerBrow -0.5 Outerbrow -0.7 UpperLid 0 LowerLid 0 Cheek 0 NoseWrinkler 0.5 UpperLip 0 LipCorner -0.5 MouthCornerStickout 0 MouthOpen 1 JawDrop 0\n&quot;, \&amp;#10;            &quot;facs InnerBrow -0.5 Outerbrow -0.7 UpperLid 0 LowerLid 0 Cheek 0 NoseWrinkler 0.5 UpperLip 0 LipCorner -0.5 MouthCornerStickout 0 MouthOpen -1 JawDrop 0\n&quot;, \&amp;#10;            &quot;facs InnerBrow 0.3 Outerbrow 0.3 UpperLid 0 LowerLid 0 Cheek 0.4 NoseWrinkler 0 UpperLip 0 LipCorner 0.3 MouthCornerStickout 0.5 MouthOpen 1 JawDrop 0\n&quot;, \&amp;#10;            &quot;facs InnerBrow 0.3 Outerbrow 0.3 UpperLid 0 LowerLid 0 Cheek 0.4 NoseWrinkler 0 UpperLip 0 LipCorner 0.3 MouthCornerStickout 0.5 MouthOpen -1 JawDrop 0\n&quot;]" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="num_01 = text&amp;#10;num_02 = prosody&amp;#10;num_03 = expression&amp;#10;&amp;#10;def talk_play():&amp;#10;    json_data = {&amp;#10;        &quot;Command&quot;: &quot;ttsPlaywithParam&quot;,&amp;#10;        &quot;TtsID&quot;: 1023,&amp;#10;        &quot;Text&quot;: stim_txt[num_01],&amp;#10;        &quot;Volume&quot;: 0.8,&amp;#10;        &quot;Rate&quot;: 1.0,&amp;#10;        &quot;Pitch&quot;: 1.0,&amp;#10;        &quot;Emphasis&quot;: 1.0,&amp;#10;        &quot;Emotion&quot;:&amp;#10;        {&amp;#10;            stim_proso[num_02]&amp;#10;        }&amp;#10;    }&amp;#10;    json_string = json.dumps(json_data)&amp;#10;    # Send messages&amp;#10;    message = roslibpy.Message({'data': json_string})&amp;#10;    #time.sleep(1)&amp;#10;    tts_topic.publish(message)&amp;#10;    #time.sleep(1)&amp;#10;&amp;#10;def face_play():&amp;#10;    cmd = stim_exp[num_03]&amp;#10;    client2.send(cmd.encode(&quot;utf-8&quot;))&amp;#10;    &amp;#10;def wait_():&amp;#10;    time.sleep(1)&amp;#10;    &amp;#10;# スレッドを作成&amp;#10;thread1 = threading.Thread(target=talk_play)&amp;#10;thread2 = threading.Thread(target=face_play)&amp;#10;thread3 = threading.Thread(target=wait_)&amp;#10;&amp;#10;# thread1を開始&amp;#10;thread1.start()&amp;#10;thread2.start()&amp;#10;thread3.start()&amp;#10;&amp;#10;# スレッドが終了するのを待つ&amp;#10;thread1.join()&amp;#10;thread2.join()&amp;#10;thread3.join()" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="stim" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="stim_end">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="client1.send(head_cmd1_1.encode(&quot;utf-8&quot;))&amp;#10;client1.send(eye_cmd1_2.encode(&quot;utf-8&quot;))&amp;#10;#client2.send(facs_cmd1.encode(&quot;utf-8&quot;))&amp;#10;&amp;#10;time.sleep(2)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="stim_end" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="Init_pose_2">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="client1.send(head_cmd0_1.encode(&quot;utf-8&quot;))&amp;#10;client2.send(facs_cmd0.encode(&quot;utf-8&quot;))&amp;#10;&amp;#10;time.sleep(3)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Init_pose_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="start_idle">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="json_string = json.dumps(compoff_false)&amp;#10;&amp;#10;#topic = roslibpy.Topic(client, '/do_idle_behavior', 'std_msgs/String')&amp;#10;message = roslibpy.Message({'data': json_string})&amp;#10;dib_topic.publish(message)&amp;#10;time.sleep(1)&amp;#10;&amp;#10;client2.send(facs_cmd1.encode(&quot;utf-8&quot;))&amp;#10;&amp;#10;time.sleep(1)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="start_idle" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="exercise">
      <CodeComponent name="stop_idle_ex">
        <Param val="# Stop idle behavior&amp;#10;import roslibpy&amp;#10;import json&amp;#10;import time&amp;#10;import socket&amp;#10;import threading&amp;#10;&amp;#10;#  server setting&amp;#10;HOST = &quot;nikola-control.ad180.riken.go.jp&quot;&amp;#10;PORT1 = 21000&amp;#10;PORT2 = 20000&amp;#10;BUFSIZE = 4096&amp;#10;&amp;#10;# create socket&amp;#10;client1 = socket.socket(socket.AF_INET, socket.SOCK_STREAM)&amp;#10;client2 = socket.socket(socket.AF_INET, socket.SOCK_STREAM)&amp;#10;&amp;#10;# connect server&amp;#10;client1.connect((HOST, PORT1))&amp;#10;client2.connect((HOST, PORT2))&amp;#10;&amp;#10;# roslibpy server setting&amp;#10;client = roslibpy.Ros(host=&quot;nikola-master.local&quot;, port=9099)&amp;#10;client.run() # connect roslibpy &amp;#10;&amp;#10;# roslibpy topic &amp;#10;dib_topic = roslibpy.Topic(client, '/do_idle_behavior', 'std_msgs/String')&amp;#10;tts_topic = roslibpy.Topic(client, '/tts', 'std_msgs/String')&amp;#10;&amp;#10;# roslibpy message&amp;#10;compoff_true = {&quot;completely_off&quot;: True}   # stop idle behavior&amp;#10;compoff_false = {&quot;completely_off&quot;: False} # start idle behavior&amp;#10;&amp;#10;# init cmd&amp;#10;head_cmd0_1 = &quot;HeadController={\&quot;id\&quot;:\&quot;HeadController\&quot;, \&amp;#10;            \&quot;motionTowardObject\&quot;:\&quot;\&quot;, \&amp;#10;            \&quot;targetMotionMode\&quot;:2, \&amp;#10;            \&quot;targetPoint\&quot;:{\&quot;x\&quot;:0.0,\&quot;y\&quot;:0.5,\&quot;z\&quot;:1.5}, \&amp;#10;            \&quot;translateSpeed\&quot;:1.0}\n&quot;&amp;#10;            &amp;#10;head_cmd0_2 = &quot;HeadController={\&quot;id\&quot;:\&quot;HeadController\&quot;, \&amp;#10;            \&quot;motionTowardObject\&quot;:\&quot;\&quot;, \&amp;#10;            \&quot;targetMotionMode\&quot;:2, \&amp;#10;            \&quot;targetPoint\&quot;:{\&quot;x\&quot;:0.0,\&quot;y\&quot;:0.5,\&quot;z\&quot;:1.5}, \&amp;#10;            \&quot;translateSpeed\&quot;:2.0}\n&quot;&amp;#10;            &amp;#10;head_cmd1_1 = &quot;HeadController={\&quot;id\&quot;:\&quot;HeadController\&quot;, \&amp;#10;            \&quot;motionTowardObject\&quot;:\&quot;\&quot;, \&amp;#10;            \&quot;targetMotionMode\&quot;:2, \&amp;#10;            \&quot;targetPoint\&quot;:{\&quot;x\&quot;:0.0,\&quot;y\&quot;:1.2,\&quot;z\&quot;:1.5}, \&amp;#10;            \&quot;translateSpeed\&quot;:1.0}\n&quot;&amp;#10;            &amp;#10;head_cmd1_2 = &quot;HeadController={\&quot;id\&quot;:\&quot;HeadController\&quot;, \&amp;#10;            \&quot;motionTowardObject\&quot;:\&quot;\&quot;, \&amp;#10;            \&quot;targetMotionMode\&quot;:2, \&amp;#10;            \&quot;targetPoint\&quot;:{\&quot;x\&quot;:0.0,\&quot;y\&quot;:1.2,\&quot;z\&quot;:1.5}, \&amp;#10;            \&quot;translateSpeed\&quot;:2.0}\n&quot;&amp;#10;&amp;#10;eye_cmd0_1 = &quot;EyeController={\&quot;id\&quot;:\&quot;EyeController\&quot;, \&amp;#10;            \&quot;motionTowardObject\&quot;:\&quot;\&quot;, \&amp;#10;            \&quot;targetMotionMode\&quot;:2, \&amp;#10;            \&quot;targetPoint\&quot;:{\&quot;x\&quot;:0.0,\&quot;y\&quot;:0.5,\&quot;z\&quot;:1.5}, \&amp;#10;            \&quot;translateSpeed\&quot;:1.0}\n&quot;&amp;#10;&amp;#10;eye_cmd0_2 = &quot;EyeController={\&quot;id\&quot;:\&quot;EyeController\&quot;, \&amp;#10;            \&quot;motionTowardObject\&quot;:\&quot;\&quot;, \&amp;#10;            \&quot;targetMotionMode\&quot;:2, \&amp;#10;            \&quot;targetPoint\&quot;:{\&quot;x\&quot;:0.0,\&quot;y\&quot;:0.5,\&quot;z\&quot;:1.5}, \&amp;#10;            \&quot;translateSpeed\&quot;:2.0}\n&quot;&amp;#10;&amp;#10;eye_cmd1_1 = &quot;EyeController={\&quot;id\&quot;:\&quot;EyeController\&quot;, \&amp;#10;            \&quot;motionTowardObject\&quot;:\&quot;\&quot;, \&amp;#10;            \&quot;targetMotionMode\&quot;:2, \&amp;#10;            \&quot;targetPoint\&quot;:{\&quot;x\&quot;:0.0,\&quot;y\&quot;:1.2,\&quot;z\&quot;:1.5}, \&amp;#10;            \&quot;translateSpeed\&quot;:1.0}\n&quot;&amp;#10;&amp;#10;eye_cmd1_2 = &quot;EyeController={\&quot;id\&quot;:\&quot;EyeController\&quot;, \&amp;#10;            \&quot;motionTowardObject\&quot;:\&quot;\&quot;, \&amp;#10;            \&quot;targetMotionMode\&quot;:2, \&amp;#10;            \&quot;targetPoint\&quot;:{\&quot;x\&quot;:0.0,\&quot;y\&quot;:1.2,\&quot;z\&quot;:1.5}, \&amp;#10;            \&quot;translateSpeed\&quot;:2.0}\n&quot;&amp;#10;            &amp;#10;facs_cmd0 = &quot;facs InnerBrow 0 \&amp;#10;             Outerbrow 0 \&amp;#10;             UpperLid -1 \&amp;#10;             LowerLid 1 \&amp;#10;             Cheek 0 \&amp;#10;             NoseWrinkler 0 \&amp;#10;             UpperLip 0 \&amp;#10;             LipCorner 0 \&amp;#10;             MouthCornerStickout 0 \&amp;#10;             MouthOpen 0 \&amp;#10;             JawDrop 0\n&quot;&amp;#10;             &amp;#10;facs_cmd1 = &quot;facs InnerBrow 0 \&amp;#10;             Outerbrow 0 \&amp;#10;             UpperLid 0 \&amp;#10;             LowerLid 0 \&amp;#10;             Cheek 0 \&amp;#10;             NoseWrinkler 0 \&amp;#10;             UpperLip 0 \&amp;#10;             LipCorner 0 \&amp;#10;             MouthCornerStickout 0 \&amp;#10;             MouthOpen 0 \&amp;#10;             JawDrop 0\n&quot;" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="# stop idle behavior&amp;#10;json_string = json.dumps(compoff_true)&amp;#10;message = roslibpy.Message({'data': json_string})&amp;#10;dib_topic.publish(message)&amp;#10;time.sleep(1)&amp;#10;&amp;#10;# eyemove 2 initpose&amp;#10;client2.send(facs_cmd0.encode(&quot;utf-8&quot;))&amp;#10;time.sleep(1)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="# Define JSON data&amp;#10;json_data = {&amp;#10;    &quot;completely_off&quot;: False&amp;#10;}&amp;#10;json_string = json.dumps(json_data)&amp;#10;&amp;#10;# Define topic and message types&amp;#10;topic = roslibpy.Topic(client, '/do_idle_behavior', 'std_msgs/String')&amp;#10;&amp;#10;# Send messages&amp;#10;message = roslibpy.Message({'data': json_string})&amp;#10;# time.sleep(1)&amp;#10;topic.publish(message)&amp;#10;# time.sleep(1)&amp;#10;&amp;#10;# Terminate connection&amp;#10;client.terminate()&amp;#10;&amp;#10;# socket client close&amp;#10;client1.close()&amp;#10;client2.close()" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="stop_idle_ex" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="Init_pose_ex">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="client1.send(head_cmd0_1.encode(&quot;utf-8&quot;))&amp;#10;# client1.send(eye_cmd0_2.encode(&quot;utf-8&quot;))&amp;#10;# client2.send(facs_cmd0.encode(&quot;utf-8&quot;))&amp;#10;time.sleep(3)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Init_pose_ex" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="start_pose_ex">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="client2.send(facs_cmd1.encode(&quot;utf-8&quot;))&amp;#10;time.sleep(1)&amp;#10;&amp;#10;client1.send(head_cmd1_1.encode(&quot;utf-8&quot;))&amp;#10;time.sleep(2)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="start_pose_ex" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="ikimasu_ex">
        <Param val="json_data_ikimasu = {&amp;#10;    &quot;Command&quot;: &quot;ttsPlaywithParam&quot;,&amp;#10;    &quot;TtsID&quot;: 1023,&amp;#10;    &quot;Text&quot;: &quot;いきます。&quot;,&amp;#10;    &quot;Volume&quot;: 0.8,&amp;#10;    &quot;Rate&quot;: 1.0,&amp;#10;    &quot;Pitch&quot;: 1.0,&amp;#10;    &quot;Emphasis&quot;: 1.0,&amp;#10;    &quot;Emotion&quot;:&amp;#10;    {&amp;#10;        &quot;Joy&quot;: 0.0,&amp;#10;        &quot;Angry&quot;: 0.0,&amp;#10;        &quot;Sad&quot;: 0.0&amp;#10;    }&amp;#10;}" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="json_string = json.dumps(json_data_ikimasu)&amp;#10;message = roslibpy.Message({'data': json_string})&amp;#10;time.sleep(1)&amp;#10;tts_topic.publish(message)&amp;#10;time.sleep(1)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="ikimasu_ex" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="stim_ex">
        <Param val="stim_txt = [&quot;僕は普通&quot;, &quot;僕は悲しい&quot;, &quot;僕はつらい&quot;, &quot;僕はうれしい&quot;, &quot;僕は楽しい&quot;]&amp;#10;stim_proso = [&quot;{\&quot;Joy\&quot;: 0.0, \&quot;Angry\&quot;: 0.0, \&quot;Sad\&quot;: 0.0}&quot;, \&amp;#10;              &quot;{\&quot;Joy\&quot;: 0.0, \&quot;Angry\&quot;: 0.0, \&quot;Sad\&quot;: 1.0}&quot;, \&amp;#10;              &quot;{\&quot;Joy\&quot;: 0.0, \&quot;Angry\&quot;: 0.0, \&quot;Sad\&quot;: 1.0}&quot;, \&amp;#10;              &quot;{\&quot;Joy\&quot;: 1.0, \&quot;Angry\&quot;: 0.0, \&quot;Sad\&quot;: 0.0}&quot;, \&amp;#10;              &quot;{\&quot;Joy\&quot;: 1.0, \&quot;Angry\&quot;: 0.0, \&quot;Sad\&quot;: 0.0}&quot;]&amp;#10;stim_exp = [&quot;facs InnerBrow 0 Outerbrow 0 UpperLid 0 LowerLid 0 Cheek 0 NoseWrinkler 0 UpperLip 0 LipCorner 0 MouthCornerStickout 0 MouthOpen 0 JawDrop 0\n&quot;, \&amp;#10;            &quot;facs InnerBrow -0.5 Outerbrow -0.7 UpperLid 0 LowerLid 0 Cheek 0 NoseWrinkler 0.5 UpperLip 0 LipCorner -0.5 MouthCornerStickout 0 MouthOpen 1 JawDrop 0\n&quot;, \&amp;#10;            &quot;facs InnerBrow -0.5 Outerbrow -0.7 UpperLid 0 LowerLid 0 Cheek 0 NoseWrinkler 0.5 UpperLip 0 LipCorner -0.5 MouthCornerStickout 0 MouthOpen -1 JawDrop 0\n&quot;, \&amp;#10;            &quot;facs InnerBrow 0.3 Outerbrow 0.3 UpperLid 0 LowerLid 0 Cheek 0.4 NoseWrinkler 0 UpperLip 0 LipCorner 0.3 MouthCornerStickout 0.5 MouthOpen 1 JawDrop 0\n&quot;, \&amp;#10;            &quot;facs InnerBrow 0.3 Outerbrow 0.3 UpperLid 0 LowerLid 0 Cheek 0.4 NoseWrinkler 0 UpperLip 0 LipCorner 0.3 MouthCornerStickout 0.5 MouthOpen -1 JawDrop 0\n&quot;]" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="num_01 = text&amp;#10;num_02 = prosody&amp;#10;num_03 = expression&amp;#10;&amp;#10;json_data_1 = {&amp;#10;    &quot;Command&quot;: &quot;ttsPlaywithParam&quot;,&amp;#10;    &quot;TtsID&quot;: 1023,&amp;#10;    &quot;Text&quot;: stim_txt[num_01],&amp;#10;    &quot;Volume&quot;: 0.8,&amp;#10;    &quot;Rate&quot;: 1.0,&amp;#10;    &quot;Pitch&quot;: 1.0,&amp;#10;    &quot;Emphasis&quot;: 1.0,&amp;#10;    &quot;Emotion&quot;: {&quot;Joy&quot;: 0.0, &quot;Angry&quot;: 0.0, &quot;Sad&quot;: 0.0}&amp;#10;}&amp;#10;json_data_2 = {&amp;#10;    &quot;Command&quot;: &quot;ttsPlaywithParam&quot;,&amp;#10;    &quot;TtsID&quot;: 1023,&amp;#10;    &quot;Text&quot;: stim_txt[num_01],&amp;#10;    &quot;Volume&quot;: 0.8,&amp;#10;    &quot;Rate&quot;: 1.0,&amp;#10;    &quot;Pitch&quot;: 1.0,&amp;#10;    &quot;Emphasis&quot;: 1.0,&amp;#10;    &quot;Emotion&quot;: {&quot;Joy&quot;: 0.0, &quot;Angry&quot;: 0.0, &quot;Sad&quot;: 1.0}&amp;#10;}&amp;#10;json_data_3 = {&amp;#10;    &quot;Command&quot;: &quot;ttsPlaywithParam&quot;,&amp;#10;    &quot;TtsID&quot;: 1023,&amp;#10;    &quot;Text&quot;: stim_txt[num_01],&amp;#10;    &quot;Volume&quot;: 0.8,&amp;#10;    &quot;Rate&quot;: 1.0,&amp;#10;    &quot;Pitch&quot;: 1.0,&amp;#10;    &quot;Emphasis&quot;: 1.0,&amp;#10;    &quot;Emotion&quot;: {&quot;Joy&quot;: 1.0, &quot;Angry&quot;: 0.0, &quot;Sad&quot;: 0.0}&amp;#10;}&amp;#10;&amp;#10;&amp;#10;def talk_play():&amp;#10;    if num_02 == 1:&amp;#10;        json_string = json.dumps(json_data_2)&amp;#10;    elif num_02 == 2:&amp;#10;        json_string = json.dumps(json_data_2)&amp;#10;    elif num_02 == 3:&amp;#10;        json_string = json.dumps(json_data_3)&amp;#10;    elif num_02 == 4:&amp;#10;        json_string = json.dumps(json_data_3)&amp;#10;    elif num_02 == 5:&amp;#10;        json_string = json.dumps(json_data_1)&amp;#10;    # Send messages&amp;#10;    message = roslibpy.Message({'data': json_string})&amp;#10;    #time.sleep(1)&amp;#10;    tts_topic.publish(message)&amp;#10;    time.sleep(1)&amp;#10;&amp;#10;def face_play():&amp;#10;    cmd = stim_exp[num_03]&amp;#10;    client2.send(cmd.encode(&quot;utf-8&quot;))&amp;#10;    &amp;#10;def wait_():&amp;#10;    time.sleep(1)&amp;#10;    &amp;#10;# スレッドを作成&amp;#10;thread1 = threading.Thread(target=talk_play)&amp;#10;thread2 = threading.Thread(target=face_play)&amp;#10;thread3 = threading.Thread(target=wait_)&amp;#10;&amp;#10;# thread1を開始&amp;#10;thread1.start()&amp;#10;thread2.start()&amp;#10;thread3.start()&amp;#10;&amp;#10;# スレッドが終了するのを待つ&amp;#10;thread1.join()&amp;#10;thread2.join()&amp;#10;thread3.join()" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="stim_ex" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="stim_end_ex">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="client1.send(head_cmd1_1.encode(&quot;utf-8&quot;))&amp;#10;client1.send(eye_cmd1_2.encode(&quot;utf-8&quot;))&amp;#10;#client2.send(facs_cmd1.encode(&quot;utf-8&quot;))&amp;#10;&amp;#10;time.sleep(2)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="stim_end_ex" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="Init_pose_ex_2">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="client1.send(head_cmd0_1.encode(&quot;utf-8&quot;))&amp;#10;client2.send(facs_cmd0.encode(&quot;utf-8&quot;))&amp;#10;&amp;#10;time.sleep(3)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Init_pose_ex_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="start_idle_ex">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="json_string = json.dumps(compoff_false)&amp;#10;&amp;#10;#topic = roslibpy.Topic(client, '/do_idle_behavior', 'std_msgs/String')&amp;#10;message = roslibpy.Message({'data': json_string})&amp;#10;dib_topic.publish(message)&amp;#10;time.sleep(1)&amp;#10;&amp;#10;client2.send(facs_cmd1.encode(&quot;utf-8&quot;))&amp;#10;&amp;#10;time.sleep(1)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="start_idle_ex" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="check_v">
      <TextComponent name="text_4">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.02" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_4" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0.15)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="感情価の値を1~9のボタンで評価してください。" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_2">
        <Param val="'1','2','3','4','5','6','7','8','9', 'escape'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_2" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="False" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="check_a">
      <TextComponent name="text_9">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.02" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_9" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0.15)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="ヒトらしさの値を1~9のボタンで評価してください。" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_3">
        <Param val="'1','2','3','4','5','6','7','8','9', 'escape'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_3" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="False" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="standby_"/>
    <Routine name="routine"/>
    <Routine name="standby">
      <TextComponent name="text_5">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_5" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="実験を開始します。&amp;#10;準備できたら左クリックを押してください。" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <MouseComponent name="mouse_4">
        <Param val="" valType="list" updates="constant" name="clickable"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="any click" valType="str" updates="constant" name="forceEndRoutineOnPress"/>
        <Param val="mouse_4" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="constant" name="newClicksOnly"/>
        <Param val="on click" valType="str" updates="None" name="saveMouseState"/>
        <Param val="name," valType="list" updates="constant" name="saveParamsClickable"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="mouse onset" valType="str" updates="constant" name="timeRelativeTo"/>
      </MouseComponent>
    </Routine>
    <Routine name="sample">
      <CodeComponent name="stop_idle_ex_2">
        <Param val="# Stop idle behavior&amp;#10;import roslibpy&amp;#10;import json&amp;#10;import time&amp;#10;import socket&amp;#10;import threading&amp;#10;&amp;#10;#  server setting&amp;#10;HOST = &quot;nikola-control.ad180.riken.go.jp&quot;&amp;#10;PORT1 = 21000&amp;#10;PORT2 = 20000&amp;#10;BUFSIZE = 4096&amp;#10;&amp;#10;# create socket&amp;#10;client1 = socket.socket(socket.AF_INET, socket.SOCK_STREAM)&amp;#10;client2 = socket.socket(socket.AF_INET, socket.SOCK_STREAM)&amp;#10;&amp;#10;# connect server&amp;#10;client1.connect((HOST, PORT1))&amp;#10;client2.connect((HOST, PORT2))&amp;#10;&amp;#10;# roslibpy server setting&amp;#10;client = roslibpy.Ros(host=&quot;nikola-master.local&quot;, port=9099)&amp;#10;client.run() # connect roslibpy &amp;#10;&amp;#10;# roslibpy topic &amp;#10;dib_topic = roslibpy.Topic(client, '/do_idle_behavior', 'std_msgs/String')&amp;#10;tts_topic = roslibpy.Topic(client, '/tts', 'std_msgs/String')&amp;#10;&amp;#10;# roslibpy message&amp;#10;compoff_true = {&quot;completely_off&quot;: True}   # stop idle behavior&amp;#10;compoff_false = {&quot;completely_off&quot;: False} # start idle behavior&amp;#10;&amp;#10;# init cmd&amp;#10;head_cmd0_1 = &quot;HeadController={\&quot;id\&quot;:\&quot;HeadController\&quot;, \&amp;#10;            \&quot;motionTowardObject\&quot;:\&quot;\&quot;, \&amp;#10;            \&quot;targetMotionMode\&quot;:2, \&amp;#10;            \&quot;targetPoint\&quot;:{\&quot;x\&quot;:0.0,\&quot;y\&quot;:0.5,\&quot;z\&quot;:1.5}, \&amp;#10;            \&quot;translateSpeed\&quot;:1.0}\n&quot;&amp;#10;            &amp;#10;head_cmd0_2 = &quot;HeadController={\&quot;id\&quot;:\&quot;HeadController\&quot;, \&amp;#10;            \&quot;motionTowardObject\&quot;:\&quot;\&quot;, \&amp;#10;            \&quot;targetMotionMode\&quot;:2, \&amp;#10;            \&quot;targetPoint\&quot;:{\&quot;x\&quot;:0.0,\&quot;y\&quot;:0.5,\&quot;z\&quot;:1.5}, \&amp;#10;            \&quot;translateSpeed\&quot;:2.0}\n&quot;&amp;#10;            &amp;#10;head_cmd1_1 = &quot;HeadController={\&quot;id\&quot;:\&quot;HeadController\&quot;, \&amp;#10;            \&quot;motionTowardObject\&quot;:\&quot;\&quot;, \&amp;#10;            \&quot;targetMotionMode\&quot;:2, \&amp;#10;            \&quot;targetPoint\&quot;:{\&quot;x\&quot;:0.0,\&quot;y\&quot;:1.2,\&quot;z\&quot;:1.5}, \&amp;#10;            \&quot;translateSpeed\&quot;:1.0}\n&quot;&amp;#10;            &amp;#10;head_cmd1_2 = &quot;HeadController={\&quot;id\&quot;:\&quot;HeadController\&quot;, \&amp;#10;            \&quot;motionTowardObject\&quot;:\&quot;\&quot;, \&amp;#10;            \&quot;targetMotionMode\&quot;:2, \&amp;#10;            \&quot;targetPoint\&quot;:{\&quot;x\&quot;:0.0,\&quot;y\&quot;:1.2,\&quot;z\&quot;:1.5}, \&amp;#10;            \&quot;translateSpeed\&quot;:2.0}\n&quot;&amp;#10;&amp;#10;eye_cmd0_1 = &quot;EyeController={\&quot;id\&quot;:\&quot;EyeController\&quot;, \&amp;#10;            \&quot;motionTowardObject\&quot;:\&quot;\&quot;, \&amp;#10;            \&quot;targetMotionMode\&quot;:2, \&amp;#10;            \&quot;targetPoint\&quot;:{\&quot;x\&quot;:0.0,\&quot;y\&quot;:0.5,\&quot;z\&quot;:1.5}, \&amp;#10;            \&quot;translateSpeed\&quot;:1.0}\n&quot;&amp;#10;&amp;#10;eye_cmd0_2 = &quot;EyeController={\&quot;id\&quot;:\&quot;EyeController\&quot;, \&amp;#10;            \&quot;motionTowardObject\&quot;:\&quot;\&quot;, \&amp;#10;            \&quot;targetMotionMode\&quot;:2, \&amp;#10;            \&quot;targetPoint\&quot;:{\&quot;x\&quot;:0.0,\&quot;y\&quot;:0.5,\&quot;z\&quot;:1.5}, \&amp;#10;            \&quot;translateSpeed\&quot;:2.0}\n&quot;&amp;#10;&amp;#10;eye_cmd1_1 = &quot;EyeController={\&quot;id\&quot;:\&quot;EyeController\&quot;, \&amp;#10;            \&quot;motionTowardObject\&quot;:\&quot;\&quot;, \&amp;#10;            \&quot;targetMotionMode\&quot;:2, \&amp;#10;            \&quot;targetPoint\&quot;:{\&quot;x\&quot;:0.0,\&quot;y\&quot;:1.2,\&quot;z\&quot;:1.5}, \&amp;#10;            \&quot;translateSpeed\&quot;:1.0}\n&quot;&amp;#10;&amp;#10;eye_cmd1_2 = &quot;EyeController={\&quot;id\&quot;:\&quot;EyeController\&quot;, \&amp;#10;            \&quot;motionTowardObject\&quot;:\&quot;\&quot;, \&amp;#10;            \&quot;targetMotionMode\&quot;:2, \&amp;#10;            \&quot;targetPoint\&quot;:{\&quot;x\&quot;:0.0,\&quot;y\&quot;:1.2,\&quot;z\&quot;:1.5}, \&amp;#10;            \&quot;translateSpeed\&quot;:2.0}\n&quot;&amp;#10;            &amp;#10;facs_cmd0 = &quot;facs InnerBrow 0 \&amp;#10;             Outerbrow 0 \&amp;#10;             UpperLid -1 \&amp;#10;             LowerLid 1 \&amp;#10;             Cheek 0 \&amp;#10;             NoseWrinkler 0 \&amp;#10;             UpperLip 0 \&amp;#10;             LipCorner 0 \&amp;#10;             MouthCornerStickout 0 \&amp;#10;             MouthOpen 0 \&amp;#10;             JawDrop 0\n&quot;&amp;#10;             &amp;#10;facs_cmd1 = &quot;facs InnerBrow 0 \&amp;#10;             Outerbrow 0 \&amp;#10;             UpperLid 0 \&amp;#10;             LowerLid 0 \&amp;#10;             Cheek 0 \&amp;#10;             NoseWrinkler 0 \&amp;#10;             UpperLip 0 \&amp;#10;             LipCorner 0 \&amp;#10;             MouthCornerStickout 0 \&amp;#10;             MouthOpen 0 \&amp;#10;             JawDrop 0\n&quot;" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="# stop idle behavior&amp;#10;json_string = json.dumps(compoff_true)&amp;#10;message = roslibpy.Message({'data': json_string})&amp;#10;dib_topic.publish(message)&amp;#10;time.sleep(1)&amp;#10;&amp;#10;# eyemove 2 initpose&amp;#10;client2.send(facs_cmd0.encode(&quot;utf-8&quot;))&amp;#10;time.sleep(1)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="# Define JSON data&amp;#10;json_data = {&amp;#10;    &quot;completely_off&quot;: False&amp;#10;}&amp;#10;json_string = json.dumps(json_data)&amp;#10;&amp;#10;# Define topic and message types&amp;#10;topic = roslibpy.Topic(client, '/do_idle_behavior', 'std_msgs/String')&amp;#10;&amp;#10;# Send messages&amp;#10;message = roslibpy.Message({'data': json_string})&amp;#10;# time.sleep(1)&amp;#10;topic.publish(message)&amp;#10;# time.sleep(1)&amp;#10;&amp;#10;# Terminate connection&amp;#10;client.terminate()&amp;#10;&amp;#10;# socket client close&amp;#10;client1.close()&amp;#10;client2.close()" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="stop_idle_ex_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="start_pose_ex_2">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="client2.send(facs_cmd1.encode(&quot;utf-8&quot;))&amp;#10;time.sleep(1)&amp;#10;&amp;#10;client1.send(head_cmd1_1.encode(&quot;utf-8&quot;))&amp;#10;time.sleep(2)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="start_pose_ex_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="ikimasu_ex_2">
        <Param val="json_data_ikimasu = {&amp;#10;    &quot;Command&quot;: &quot;ttsPlaywithParam&quot;,&amp;#10;    &quot;TtsID&quot;: 1023,&amp;#10;    &quot;Text&quot;: &quot;いきます。&quot;,&amp;#10;    &quot;Volume&quot;: 0.8,&amp;#10;    &quot;Rate&quot;: 1.0,&amp;#10;    &quot;Pitch&quot;: 1.0,&amp;#10;    &quot;Emphasis&quot;: 1.0,&amp;#10;    &quot;Emotion&quot;:&amp;#10;    {&amp;#10;        &quot;Joy&quot;: 0.0,&amp;#10;        &quot;Angry&quot;: 0.0,&amp;#10;        &quot;Sad&quot;: 0.0&amp;#10;    }&amp;#10;}" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="json_string = json.dumps(json_data_ikimasu)&amp;#10;message = roslibpy.Message({'data': json_string})&amp;#10;time.sleep(1)&amp;#10;tts_topic.publish(message)&amp;#10;time.sleep(1)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="ikimasu_ex_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="code_3">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="num_01 = 1&amp;#10;num_02 = 1&amp;#10;num_03 = 1&amp;#10;&amp;#10;json_data_1 = {&amp;#10;    &quot;Command&quot;: &quot;ttsPlaywithParam&quot;,&amp;#10;    &quot;TtsID&quot;: 1023,&amp;#10;    &quot;Text&quot;: stim_txt[num_01],&amp;#10;    &quot;Volume&quot;: 0.8,&amp;#10;    &quot;Rate&quot;: 1.0,&amp;#10;    &quot;Pitch&quot;: 1.0,&amp;#10;    &quot;Emphasis&quot;: 1.0,&amp;#10;    &quot;Emotion&quot;: {&quot;Joy&quot;: 0.0, &quot;Angry&quot;: 0.0, &quot;Sad&quot;: 0.0}&amp;#10;}&amp;#10;json_data_2 = {&amp;#10;    &quot;Command&quot;: &quot;ttsPlaywithParam&quot;,&amp;#10;    &quot;TtsID&quot;: 1023,&amp;#10;    &quot;Text&quot;: stim_txt[num_01],&amp;#10;    &quot;Volume&quot;: 0.8,&amp;#10;    &quot;Rate&quot;: 1.0,&amp;#10;    &quot;Pitch&quot;: 1.0,&amp;#10;    &quot;Emphasis&quot;: 1.0,&amp;#10;    &quot;Emotion&quot;: {&quot;Joy&quot;: 0.0, &quot;Angry&quot;: 0.0, &quot;Sad&quot;: 1.0}&amp;#10;}&amp;#10;json_data_3 = {&amp;#10;    &quot;Command&quot;: &quot;ttsPlaywithParam&quot;,&amp;#10;    &quot;TtsID&quot;: 1023,&amp;#10;    &quot;Text&quot;: stim_txt[num_01],&amp;#10;    &quot;Volume&quot;: 0.8,&amp;#10;    &quot;Rate&quot;: 1.0,&amp;#10;    &quot;Pitch&quot;: 1.0,&amp;#10;    &quot;Emphasis&quot;: 1.0,&amp;#10;    &quot;Emotion&quot;: {&quot;Joy&quot;: 1.0, &quot;Angry&quot;: 0.0, &quot;Sad&quot;: 0.0}&amp;#10;}&amp;#10;&amp;#10;&amp;#10;def talk_play():&amp;#10;    if num_02 == 1:&amp;#10;        json_string = json.dumps(json_data_2)&amp;#10;    elif num_02 == 2:&amp;#10;        json_string = json.dumps(json_data_2)&amp;#10;    elif num_02 == 3:&amp;#10;        json_string = json.dumps(json_data_3)&amp;#10;    elif num_02 == 4:&amp;#10;        json_string = json.dumps(json_data_3)&amp;#10;    elif num_02 == 5:&amp;#10;        json_string = json.dumps(json_data_1)&amp;#10;    # Send messages&amp;#10;    message = roslibpy.Message({'data': json_string})&amp;#10;    #time.sleep(1)&amp;#10;    tts_topic.publish(message)&amp;#10;    time.sleep(1)&amp;#10;&amp;#10;def face_play():&amp;#10;    cmd = stim_exp[num_03]&amp;#10;    client2.send(cmd.encode(&quot;utf-8&quot;))&amp;#10;    &amp;#10;def wait_():&amp;#10;    time.sleep(1)&amp;#10;    &amp;#10;# スレッドを作成&amp;#10;thread1 = threading.Thread(target=talk_play)&amp;#10;thread2 = threading.Thread(target=face_play)&amp;#10;thread3 = threading.Thread(target=wait_)&amp;#10;&amp;#10;# thread1を開始&amp;#10;thread1.start()&amp;#10;thread2.start()&amp;#10;thread3.start()&amp;#10;&amp;#10;# スレッドが終了するのを待つ&amp;#10;thread1.join()&amp;#10;thread2.join()&amp;#10;thread3.join()" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_3" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="code_4">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="num_01 = 2&amp;#10;num_02 = 2&amp;#10;num_03 = 2&amp;#10;&amp;#10;json_data_1 = {&amp;#10;    &quot;Command&quot;: &quot;ttsPlaywithParam&quot;,&amp;#10;    &quot;TtsID&quot;: 1023,&amp;#10;    &quot;Text&quot;: stim_txt[num_01],&amp;#10;    &quot;Volume&quot;: 0.8,&amp;#10;    &quot;Rate&quot;: 1.0,&amp;#10;    &quot;Pitch&quot;: 1.0,&amp;#10;    &quot;Emphasis&quot;: 1.0,&amp;#10;    &quot;Emotion&quot;: {&quot;Joy&quot;: 0.0, &quot;Angry&quot;: 0.0, &quot;Sad&quot;: 0.0}&amp;#10;}&amp;#10;json_data_2 = {&amp;#10;    &quot;Command&quot;: &quot;ttsPlaywithParam&quot;,&amp;#10;    &quot;TtsID&quot;: 1023,&amp;#10;    &quot;Text&quot;: stim_txt[num_01],&amp;#10;    &quot;Volume&quot;: 0.8,&amp;#10;    &quot;Rate&quot;: 1.0,&amp;#10;    &quot;Pitch&quot;: 1.0,&amp;#10;    &quot;Emphasis&quot;: 1.0,&amp;#10;    &quot;Emotion&quot;: {&quot;Joy&quot;: 0.0, &quot;Angry&quot;: 0.0, &quot;Sad&quot;: 1.0}&amp;#10;}&amp;#10;json_data_3 = {&amp;#10;    &quot;Command&quot;: &quot;ttsPlaywithParam&quot;,&amp;#10;    &quot;TtsID&quot;: 1023,&amp;#10;    &quot;Text&quot;: stim_txt[num_01],&amp;#10;    &quot;Volume&quot;: 0.8,&amp;#10;    &quot;Rate&quot;: 1.0,&amp;#10;    &quot;Pitch&quot;: 1.0,&amp;#10;    &quot;Emphasis&quot;: 1.0,&amp;#10;    &quot;Emotion&quot;: {&quot;Joy&quot;: 1.0, &quot;Angry&quot;: 0.0, &quot;Sad&quot;: 0.0}&amp;#10;}&amp;#10;&amp;#10;&amp;#10;def talk_play():&amp;#10;    if num_02 == 1:&amp;#10;        json_string = json.dumps(json_data_2)&amp;#10;    elif num_02 == 2:&amp;#10;        json_string = json.dumps(json_data_2)&amp;#10;    elif num_02 == 3:&amp;#10;        json_string = json.dumps(json_data_3)&amp;#10;    elif num_02 == 4:&amp;#10;        json_string = json.dumps(json_data_3)&amp;#10;    elif num_02 == 5:&amp;#10;        json_string = json.dumps(json_data_1)&amp;#10;    # Send messages&amp;#10;    message = roslibpy.Message({'data': json_string})&amp;#10;    #time.sleep(1)&amp;#10;    tts_topic.publish(message)&amp;#10;    time.sleep(1)&amp;#10;&amp;#10;def face_play():&amp;#10;    cmd = stim_exp[num_03]&amp;#10;    client2.send(cmd.encode(&quot;utf-8&quot;))&amp;#10;    &amp;#10;def wait_():&amp;#10;    time.sleep(1)&amp;#10;    &amp;#10;# スレッドを作成&amp;#10;thread1 = threading.Thread(target=talk_play)&amp;#10;thread2 = threading.Thread(target=face_play)&amp;#10;thread3 = threading.Thread(target=wait_)&amp;#10;&amp;#10;# thread1を開始&amp;#10;thread1.start()&amp;#10;thread2.start()&amp;#10;thread3.start()&amp;#10;&amp;#10;# スレッドが終了するのを待つ&amp;#10;thread1.join()&amp;#10;thread2.join()&amp;#10;thread3.join()" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_4" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="code_5">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="num_01 = 3&amp;#10;num_02 = 3&amp;#10;num_03 = 3&amp;#10;&amp;#10;json_data_1 = {&amp;#10;    &quot;Command&quot;: &quot;ttsPlaywithParam&quot;,&amp;#10;    &quot;TtsID&quot;: 1023,&amp;#10;    &quot;Text&quot;: stim_txt[num_01],&amp;#10;    &quot;Volume&quot;: 0.8,&amp;#10;    &quot;Rate&quot;: 1.0,&amp;#10;    &quot;Pitch&quot;: 1.0,&amp;#10;    &quot;Emphasis&quot;: 1.0,&amp;#10;    &quot;Emotion&quot;: {&quot;Joy&quot;: 0.0, &quot;Angry&quot;: 0.0, &quot;Sad&quot;: 0.0}&amp;#10;}&amp;#10;json_data_2 = {&amp;#10;    &quot;Command&quot;: &quot;ttsPlaywithParam&quot;,&amp;#10;    &quot;TtsID&quot;: 1023,&amp;#10;    &quot;Text&quot;: stim_txt[num_01],&amp;#10;    &quot;Volume&quot;: 0.8,&amp;#10;    &quot;Rate&quot;: 1.0,&amp;#10;    &quot;Pitch&quot;: 1.0,&amp;#10;    &quot;Emphasis&quot;: 1.0,&amp;#10;    &quot;Emotion&quot;: {&quot;Joy&quot;: 0.0, &quot;Angry&quot;: 0.0, &quot;Sad&quot;: 1.0}&amp;#10;}&amp;#10;json_data_3 = {&amp;#10;    &quot;Command&quot;: &quot;ttsPlaywithParam&quot;,&amp;#10;    &quot;TtsID&quot;: 1023,&amp;#10;    &quot;Text&quot;: stim_txt[num_01],&amp;#10;    &quot;Volume&quot;: 0.8,&amp;#10;    &quot;Rate&quot;: 1.0,&amp;#10;    &quot;Pitch&quot;: 1.0,&amp;#10;    &quot;Emphasis&quot;: 1.0,&amp;#10;    &quot;Emotion&quot;: {&quot;Joy&quot;: 1.0, &quot;Angry&quot;: 0.0, &quot;Sad&quot;: 0.0}&amp;#10;}&amp;#10;&amp;#10;&amp;#10;def talk_play():&amp;#10;    if num_02 == 1:&amp;#10;        json_string = json.dumps(json_data_2)&amp;#10;    elif num_02 == 2:&amp;#10;        json_string = json.dumps(json_data_2)&amp;#10;    elif num_02 == 3:&amp;#10;        json_string = json.dumps(json_data_3)&amp;#10;    elif num_02 == 4:&amp;#10;        json_string = json.dumps(json_data_3)&amp;#10;    elif num_02 == 5:&amp;#10;        json_string = json.dumps(json_data_1)&amp;#10;    # Send messages&amp;#10;    message = roslibpy.Message({'data': json_string})&amp;#10;    #time.sleep(1)&amp;#10;    tts_topic.publish(message)&amp;#10;    time.sleep(1)&amp;#10;&amp;#10;def face_play():&amp;#10;    cmd = stim_exp[num_03]&amp;#10;    client2.send(cmd.encode(&quot;utf-8&quot;))&amp;#10;    &amp;#10;def wait_():&amp;#10;    time.sleep(1)&amp;#10;    &amp;#10;# スレッドを作成&amp;#10;thread1 = threading.Thread(target=talk_play)&amp;#10;thread2 = threading.Thread(target=face_play)&amp;#10;thread3 = threading.Thread(target=wait_)&amp;#10;&amp;#10;# thread1を開始&amp;#10;thread1.start()&amp;#10;thread2.start()&amp;#10;thread3.start()&amp;#10;&amp;#10;# スレッドが終了するのを待つ&amp;#10;thread1.join()&amp;#10;thread2.join()&amp;#10;thread3.join()" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_5" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="code_6">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="num_01 = 4&amp;#10;num_02 = 4&amp;#10;num_03 = 4&amp;#10;&amp;#10;json_data_1 = {&amp;#10;    &quot;Command&quot;: &quot;ttsPlaywithParam&quot;,&amp;#10;    &quot;TtsID&quot;: 1023,&amp;#10;    &quot;Text&quot;: stim_txt[num_01],&amp;#10;    &quot;Volume&quot;: 0.8,&amp;#10;    &quot;Rate&quot;: 1.0,&amp;#10;    &quot;Pitch&quot;: 1.0,&amp;#10;    &quot;Emphasis&quot;: 1.0,&amp;#10;    &quot;Emotion&quot;: {&quot;Joy&quot;: 0.0, &quot;Angry&quot;: 0.0, &quot;Sad&quot;: 0.0}&amp;#10;}&amp;#10;json_data_2 = {&amp;#10;    &quot;Command&quot;: &quot;ttsPlaywithParam&quot;,&amp;#10;    &quot;TtsID&quot;: 1023,&amp;#10;    &quot;Text&quot;: stim_txt[num_01],&amp;#10;    &quot;Volume&quot;: 0.8,&amp;#10;    &quot;Rate&quot;: 1.0,&amp;#10;    &quot;Pitch&quot;: 1.0,&amp;#10;    &quot;Emphasis&quot;: 1.0,&amp;#10;    &quot;Emotion&quot;: {&quot;Joy&quot;: 0.0, &quot;Angry&quot;: 0.0, &quot;Sad&quot;: 1.0}&amp;#10;}&amp;#10;json_data_3 = {&amp;#10;    &quot;Command&quot;: &quot;ttsPlaywithParam&quot;,&amp;#10;    &quot;TtsID&quot;: 1023,&amp;#10;    &quot;Text&quot;: stim_txt[num_01],&amp;#10;    &quot;Volume&quot;: 0.8,&amp;#10;    &quot;Rate&quot;: 1.0,&amp;#10;    &quot;Pitch&quot;: 1.0,&amp;#10;    &quot;Emphasis&quot;: 1.0,&amp;#10;    &quot;Emotion&quot;: {&quot;Joy&quot;: 1.0, &quot;Angry&quot;: 0.0, &quot;Sad&quot;: 0.0}&amp;#10;}&amp;#10;&amp;#10;&amp;#10;def talk_play():&amp;#10;    if num_02 == 1:&amp;#10;        json_string = json.dumps(json_data_2)&amp;#10;    elif num_02 == 2:&amp;#10;        json_string = json.dumps(json_data_2)&amp;#10;    elif num_02 == 3:&amp;#10;        json_string = json.dumps(json_data_3)&amp;#10;    elif num_02 == 4:&amp;#10;        json_string = json.dumps(json_data_3)&amp;#10;    elif num_02 == 5:&amp;#10;        json_string = json.dumps(json_data_1)&amp;#10;    # Send messages&amp;#10;    message = roslibpy.Message({'data': json_string})&amp;#10;    #time.sleep(1)&amp;#10;    tts_topic.publish(message)&amp;#10;    time.sleep(1)&amp;#10;&amp;#10;def face_play():&amp;#10;    cmd = stim_exp[num_03]&amp;#10;    client2.send(cmd.encode(&quot;utf-8&quot;))&amp;#10;    &amp;#10;def wait_():&amp;#10;    time.sleep(1)&amp;#10;    &amp;#10;# スレッドを作成&amp;#10;thread1 = threading.Thread(target=talk_play)&amp;#10;thread2 = threading.Thread(target=face_play)&amp;#10;thread3 = threading.Thread(target=wait_)&amp;#10;&amp;#10;# thread1を開始&amp;#10;thread1.start()&amp;#10;thread2.start()&amp;#10;thread3.start()&amp;#10;&amp;#10;# スレッドが終了するのを待つ&amp;#10;thread1.join()&amp;#10;thread2.join()&amp;#10;thread3.join()" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_6" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="code_7">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="num_01 = 5&amp;#10;num_02 = 5&amp;#10;num_03 = 5&amp;#10;&amp;#10;json_data_1 = {&amp;#10;    &quot;Command&quot;: &quot;ttsPlaywithParam&quot;,&amp;#10;    &quot;TtsID&quot;: 1023,&amp;#10;    &quot;Text&quot;: stim_txt[num_01],&amp;#10;    &quot;Volume&quot;: 0.8,&amp;#10;    &quot;Rate&quot;: 1.0,&amp;#10;    &quot;Pitch&quot;: 1.0,&amp;#10;    &quot;Emphasis&quot;: 1.0,&amp;#10;    &quot;Emotion&quot;: {&quot;Joy&quot;: 0.0, &quot;Angry&quot;: 0.0, &quot;Sad&quot;: 0.0}&amp;#10;}&amp;#10;json_data_2 = {&amp;#10;    &quot;Command&quot;: &quot;ttsPlaywithParam&quot;,&amp;#10;    &quot;TtsID&quot;: 1023,&amp;#10;    &quot;Text&quot;: stim_txt[num_01],&amp;#10;    &quot;Volume&quot;: 0.8,&amp;#10;    &quot;Rate&quot;: 1.0,&amp;#10;    &quot;Pitch&quot;: 1.0,&amp;#10;    &quot;Emphasis&quot;: 1.0,&amp;#10;    &quot;Emotion&quot;: {&quot;Joy&quot;: 0.0, &quot;Angry&quot;: 0.0, &quot;Sad&quot;: 1.0}&amp;#10;}&amp;#10;json_data_3 = {&amp;#10;    &quot;Command&quot;: &quot;ttsPlaywithParam&quot;,&amp;#10;    &quot;TtsID&quot;: 1023,&amp;#10;    &quot;Text&quot;: stim_txt[num_01],&amp;#10;    &quot;Volume&quot;: 0.8,&amp;#10;    &quot;Rate&quot;: 1.0,&amp;#10;    &quot;Pitch&quot;: 1.0,&amp;#10;    &quot;Emphasis&quot;: 1.0,&amp;#10;    &quot;Emotion&quot;: {&quot;Joy&quot;: 1.0, &quot;Angry&quot;: 0.0, &quot;Sad&quot;: 0.0}&amp;#10;}&amp;#10;&amp;#10;&amp;#10;def talk_play():&amp;#10;    if num_02 == 1:&amp;#10;        json_string = json.dumps(json_data_2)&amp;#10;    elif num_02 == 2:&amp;#10;        json_string = json.dumps(json_data_2)&amp;#10;    elif num_02 == 3:&amp;#10;        json_string = json.dumps(json_data_3)&amp;#10;    elif num_02 == 4:&amp;#10;        json_string = json.dumps(json_data_3)&amp;#10;    elif num_02 == 5:&amp;#10;        json_string = json.dumps(json_data_1)&amp;#10;    # Send messages&amp;#10;    message = roslibpy.Message({'data': json_string})&amp;#10;    #time.sleep(1)&amp;#10;    tts_topic.publish(message)&amp;#10;    time.sleep(1)&amp;#10;&amp;#10;def face_play():&amp;#10;    cmd = stim_exp[num_03]&amp;#10;    client2.send(cmd.encode(&quot;utf-8&quot;))&amp;#10;    &amp;#10;def wait_():&amp;#10;    time.sleep(1)&amp;#10;    &amp;#10;# スレッドを作成&amp;#10;thread1 = threading.Thread(target=talk_play)&amp;#10;thread2 = threading.Thread(target=face_play)&amp;#10;thread3 = threading.Thread(target=wait_)&amp;#10;&amp;#10;# thread1を開始&amp;#10;thread1.start()&amp;#10;thread2.start()&amp;#10;thread3.start()&amp;#10;&amp;#10;# スレッドが終了するのを待つ&amp;#10;thread1.join()&amp;#10;thread2.join()&amp;#10;thread3.join()" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_7" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="stim_end_ex_2">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="client1.send(head_cmd1_1.encode(&quot;utf-8&quot;))&amp;#10;client1.send(eye_cmd1_2.encode(&quot;utf-8&quot;))&amp;#10;#client2.send(facs_cmd1.encode(&quot;utf-8&quot;))&amp;#10;&amp;#10;time.sleep(2)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="stim_end_ex_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="start_idle_ex_2">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="json_string = json.dumps(compoff_false)&amp;#10;&amp;#10;#topic = roslibpy.Topic(client, '/do_idle_behavior', 'std_msgs/String')&amp;#10;message = roslibpy.Message({'data': json_string})&amp;#10;dib_topic.publish(message)&amp;#10;time.sleep(1)&amp;#10;&amp;#10;client2.send(facs_cmd1.encode(&quot;utf-8&quot;))&amp;#10;&amp;#10;time.sleep(1)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="start_idle_ex_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
  </Routines>
  <Flow>
    <Routine name="trial"/>
    <Routine name="start_countdown"/>
    <LoopInitiator loopType="TrialHandler" name="trials_2">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[{'text': 1, 'prosody': 1, 'expression': 1}, {'text': 2, 'prosody': 2, 'expression': 2}, {'text': 3, 'prosody': 3, 'expression': 3}, {'text': 4, 'prosody': 4, 'expression': 4}, {'text': 0, 'prosody': 0, 'expression': 0}]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="exercise.xlsx" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="trials_2" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="exercise"/>
    <Routine name="check_v"/>
    <Routine name="check_a"/>
    <LoopTerminator name="trials_2"/>
    <Routine name="standby"/>
    <Routine name="start_countdown"/>
    <LoopInitiator loopType="TrialHandler" name="trials">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[{'text': 1, 'prosody': 0, 'expression': 0}, {'text': 2, 'prosody': 0, 'expression': 0}, {'text': 3, 'prosody': 0, 'expression': 0}, {'text': 4, 'prosody': 0, 'expression': 0}, {'text': 0, 'prosody': 1, 'expression': 0}, {'text': 0, 'prosody': 2, 'expression': 0}, {'text': 0, 'prosody': 3, 'expression': 0}, {'text': 0, 'prosody': 4, 'expression': 0}, {'text': 0, 'prosody': 0, 'expression': 1}, {'text': 0, 'prosody': 0, 'expression': 2}, {'text': 0, 'prosody': 0, 'expression': 3}, {'text': 0, 'prosody': 0, 'expression': 4}, {'text': 1, 'prosody': 1, 'expression': 0}, {'text': 1, 'prosody': 2, 'expression': 0}, {'text': 2, 'prosody': 1, 'expression': 0}, {'text': 2, 'prosody': 2, 'expression': 0}, {'text': 3, 'prosody': 3, 'expression': 0}, {'text': 3, 'prosody': 4, 'expression': 0}, {'text': 4, 'prosody': 3, 'expression': 0}, {'text': 4, 'prosody': 4, 'expression': 0}, {'text': 1, 'prosody': 0, 'expression': 1}, {'text': 1, 'prosody': 0, 'expression': 2}, {'text': 2, 'prosody': 0, 'expression': 1}, {'text': 2, 'prosody': 0, 'expression': 2}, {'text': 3, 'prosody': 0, 'expression': 3}, {'text': 3, 'prosody': 0, 'expression': 4}, {'text': 4, 'prosody': 0, 'expression': 3}, {'text': 4, 'prosody': 0, 'expression': 4}, {'text': 0, 'prosody': 1, 'expression': 1}, {'text': 0, 'prosody': 1, 'expression': 2}, {'text': 0, 'prosody': 2, 'expression': 1}, {'text': 0, 'prosody': 2, 'expression': 2}, {'text': 0, 'prosody': 3, 'expression': 3}, {'text': 0, 'prosody': 3, 'expression': 4}, {'text': 0, 'prosody': 4, 'expression': 3}, {'text': 0, 'prosody': 4, 'expression': 4}, {'text': 1, 'prosody': 1, 'expression': 1}, {'text': 1, 'prosody': 1, 'expression': 2}, {'text': 1, 'prosody': 2, 'expression': 1}, {'text': 1, 'prosody': 2, 'expression': 2}, {'text': 2, 'prosody': 1, 'expression': 1}, {'text': 2, 'prosody': 1, 'expression': 2}, {'text': 2, 'prosody': 2, 'expression': 1}, {'text': 2, 'prosody': 2, 'expression': 2}, {'text': 3, 'prosody': 3, 'expression': 3}, {'text': 3, 'prosody': 3, 'expression': 4}, {'text': 3, 'prosody': 4, 'expression': 3}, {'text': 3, 'prosody': 4, 'expression': 4}, {'text': 4, 'prosody': 3, 'expression': 3}, {'text': 4, 'prosody': 3, 'expression': 4}, {'text': 4, 'prosody': 4, 'expression': 3}, {'text': 4, 'prosody': 4, 'expression': 4}, {'text': 0, 'prosody': 0, 'expression': 0}, {'text': 0, 'prosody': 0, 'expression': 0}, {'text': 0, 'prosody': 0, 'expression': 0}, {'text': 0, 'prosody': 0, 'expression': 0}]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="ResumeMulti.xlsx" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="trials" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="counter"/>
    <LoopInitiator loopType="TrialHandler" name="break_">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="isRest" valType="num"/>
      <Param name="name" updates="None" val="break_" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="routine_1"/>
    <LoopTerminator name="break_"/>
    <Routine name="test"/>
    <Routine name="check_v"/>
    <Routine name="check_a"/>
    <LoopTerminator name="trials"/>
    <Routine name="finish"/>
  </Flow>
</PsychoPy2experiment>
